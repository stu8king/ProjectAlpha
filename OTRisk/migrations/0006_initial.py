# Generated by Django 4.2.2 on 2023-09-14 11:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('OTRisk', '0005_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MitreICSTactics',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tactic', models.TextField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'tblMitreICSTactics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='tblConsequence',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Consequence', models.TextField()),
            ],
            options={
                'db_table': 'tblConsequences',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='auditlog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('userID', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('user_action', models.CharField(max_length=100)),
                ('user_ipaddress', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'tblAuditLog',
            },
        ),
        migrations.CreateModel(
            name='ControlRiskAffinity',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('RAWorksheetID', models.IntegerField()),
                ('ControlID', models.IntegerField()),
                ('ControlAffinity', models.CharField(max_length=3)),
                ('ControlAssetID', models.IntegerField()),
                ('Description', models.CharField(max_length=255)),
                ('RiskReduction', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'tblControlRiskAffinity',
            },
        ),
        migrations.CreateModel(
            name='FacilityType',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('FacilityType', models.CharField(max_length=50)),
                ('Description', models.CharField(max_length=255)),
                ('RiskWeighting', models.IntegerField()),
            ],
            options={
                'db_table': 'tblFacilityTypes',
            },
        ),
        migrations.CreateModel(
            name='MitreICSMitigations',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'tblMitreMitigations',
            },
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('fkFacilityType', models.ForeignKey(db_column='fkFacilityType_id', on_delete=django.db.models.deletion.CASCADE, to='OTRisk.facilitytype')),
            ],
            options={
                'db_table': 'tblQuestionnaire',
            },
        ),
        migrations.CreateModel(
            name='RAWorksheet',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('RATitle', models.CharField(max_length=255)),
                ('RADescription', models.CharField(max_length=255)),
                ('RADate', models.CharField(max_length=255)),
                ('RASynopsis', models.CharField(max_length=255)),
                ('UserID', models.IntegerField()),
                ('StatusFlag', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed')], default='Open', max_length=5)),
                ('RATrigger', models.CharField(max_length=25)),
                ('AssessorName', models.CharField(max_length=50)),
                ('BusinessUnit', models.CharField(max_length=50)),
                ('BusinessUnitType', models.CharField(max_length=50)),
                ('EmployeeCount', models.IntegerField(default=0, null=True)),
                ('RegulatoryOversight', models.CharField(max_length=5)),
                ('WalkdownID', models.IntegerField()),
                ('industry', models.CharField(max_length=30)),
                ('cyberPHAID', models.IntegerField(default=0)),
                ('revenue', models.IntegerField()),
                ('insurance', models.IntegerField()),
                ('deductable', models.IntegerField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization')),
            ],
            options={
                'db_table': 'tblRAWorksheet',
            },
        ),
        migrations.CreateModel(
            name='RiskScenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.IntegerField()),
                ('ScenarioDescription', models.TextField()),
                ('ConsequenceAnalysis', models.TextField()),
                ('ThreatScore', models.TextField()),
                ('ThreatAction', models.TextField()),
                ('Countermeasures', models.TextField()),
                ('Severity', models.TextField()),
                ('Frequency', models.TextField()),
                ('Exposure', models.TextField()),
                ('Resilience', models.TextField()),
                ('RRu', models.TextField()),
                ('UEL', models.TextField()),
                ('SI', models.TextField()),
                ('Sm', models.TextField()),
                ('MEL', models.TextField()),
                ('RRm', models.TextField()),
                ('Sa', models.TextField()),
                ('MELa', models.TextField()),
                ('RRa', models.TextField()),
            ],
            options={
                'db_table': 'OTRisk_scenario',
            },
        ),
        migrations.CreateModel(
            name='SecurityControls',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Control', models.CharField(max_length=50)),
                ('ControlTypeDescription', models.CharField(max_length=255)),
                ('ControlCategory', models.CharField(max_length=25)),
            ],
            options={
                'db_table': 'tblControls',
            },
        ),
        migrations.CreateModel(
            name='SiteWalkdown',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('WalkdownDate', models.CharField(max_length=10)),
                ('OrganizationName', models.CharField(max_length=100)),
                ('LocationAddress', models.CharField(max_length=255)),
                ('LocationCountry', models.CharField(max_length=20)),
                ('LocationType', models.CharField(max_length=20)),
                ('PeopleOnSite', models.IntegerField()),
                ('WalkdownLeader', models.CharField(max_length=100)),
                ('OrgContact', models.CharField(max_length=100)),
                ('WalkdownStartTime', models.CharField(max_length=10)),
                ('WalkdownEndTime', models.CharField(max_length=10)),
                ('DisallowedZones', models.CharField(max_length=255)),
                ('SafetyBriefingGiven', models.CharField(max_length=3)),
            ],
            options={
                'db_table': 'tblWalkdown',
            },
        ),
        migrations.CreateModel(
            name='SiteWalkdownQuestionnaire',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Category', models.CharField(max_length=100)),
                ('WalkdownQuestion', models.CharField(max_length=255)),
                ('WalkdownGuidance', models.CharField(max_length=255)),
                ('QNumber', models.IntegerField()),
            ],
            options={
                'db_table': 'tblWalkdownQuestions',
            },
        ),
        migrations.CreateModel(
            name='tblAssessmentCriteria',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Criterion', models.CharField(max_length=100)),
                ('Scale', models.CharField(max_length=100)),
                ('Formula', models.CharField(max_length=100)),
                ('Algorithm', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tblAssessmentCriteria',
            },
        ),
        migrations.CreateModel(
            name='tblCompliance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('regulationName', models.CharField(max_length=255)),
                ('regulationCountry', models.CharField(max_length=50)),
                ('industry', models.TextField(max_length=100)),
                ('acronym', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'tblCompliance',
            },
        ),
        migrations.CreateModel(
            name='tblControlObjectives',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('ControlObjective', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tblControlObjectives',
            },
        ),
        migrations.CreateModel(
            name='tblCyberPHAEntry',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('AssessmentName', models.CharField(max_length=255)),
                ('Scenario', models.CharField(max_length=255)),
                ('ControlObjective', models.CharField(max_length=255)),
                ('RiskCategory', models.CharField(max_length=255)),
                ('AssessmentCriteria', models.CharField(max_length=255)),
                ('MitigationMeasures', models.CharField(max_length=255)),
                ('Likelihood', models.IntegerField()),
                ('Impact', models.IntegerField()),
                ('RiskLevel', models.CharField(max_length=255)),
                ('ThreatIntelligence', models.CharField(max_length=255)),
                ('CyberPHAID', models.IntegerField()),
                ('Consequences', models.TextField()),
            ],
            options={
                'db_table': 'tblCyberPHAEntry',
            },
        ),
        migrations.CreateModel(
            name='tblCyberPHAHeader',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('PHALeader', models.CharField(max_length=30)),
                ('PHALeaderEmail', models.CharField(max_length=50)),
                ('FacilityID', models.IntegerField()),
                ('FacilityName', models.CharField(max_length=50)),
                ('FacilityOwner', models.CharField(max_length=50)),
                ('FacilityScope', models.CharField(max_length=255)),
                ('Description', models.CharField(max_length=255)),
                ('Notes', models.TextField(max_length=255)),
                ('Date', models.DateTimeField()),
                ('AssessmentUnit', models.CharField(max_length=100)),
                ('AssessmentNode', models.CharField(max_length=100)),
                ('AssessmentZone', models.CharField(max_length=100)),
                ('FacilityType', models.CharField(max_length=100)),
                ('Industry', models.TextField(max_length=30)),
                ('EmployeesOnSite', models.IntegerField()),
                ('AssessmentStartDate', models.DateField()),
                ('AssessmentEndDate', models.DateField()),
                ('AssessmentStatus', models.CharField(max_length=10)),
                ('UserID', models.CharField(max_length=10)),
                ('Deleted', models.IntegerField()),
                ('facilityAddress', models.CharField(max_length=255)),
                ('title', models.TextField()),
                ('safetySummary', models.TextField()),
                ('chemicalSummary', models.TextField()),
                ('physicalSummary', models.TextField()),
                ('otherSummary', models.TextField()),
                ('country', models.TextField()),
            ],
            options={
                'db_table': 'tblCyberPHAHeader',
            },
        ),
        migrations.CreateModel(
            name='tblDeviations',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Deviation', models.CharField(max_length=25)),
                ('Description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tblDeviations',
            },
        ),
        migrations.CreateModel(
            name='tblIndustry',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Industry', models.CharField(max_length=100)),
                ('safetyWeight', models.IntegerField()),
                ('lifeWeight', models.IntegerField()),
                ('productionWeight', models.IntegerField()),
                ('financeWeight', models.IntegerField()),
                ('reputationWeight', models.IntegerField()),
                ('environmentWeight', models.IntegerField()),
                ('regulatoryWeight', models.IntegerField()),
                ('dataWeight', models.IntegerField()),
            ],
            options={
                'db_table': 'tblIndustry',
            },
        ),
        migrations.CreateModel(
            name='tblMitigationMeasures',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('ControlObjective', models.CharField(max_length=255)),
                ('ControlDescription', models.CharField(max_length=255)),
                ('ImplementationGuidelines', models.TextField(max_length=255)),
                ('ResponsibleParty', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tblMitigationMeasures',
            },
        ),
        migrations.CreateModel(
            name='tblNodes',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('NodeType', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tblNodes',
            },
        ),
        migrations.CreateModel(
            name='tblRiskCategories',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('CategoryName', models.CharField(max_length=100)),
                ('Description', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tblRiskCategories',
            },
        ),
        migrations.CreateModel(
            name='tblSafeguards',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Safeguard', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tblSafeguards',
            },
        ),
        migrations.CreateModel(
            name='tblScenarioRecommendations',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('RiskPostID', models.IntegerField()),
                ('Recommendation', models.TextField()),
            ],
            options={
                'db_table': 'tblScenarioRecommendations',
            },
        ),
        migrations.CreateModel(
            name='tblScenarios',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Scenario', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tblScenarios',
            },
        ),
        migrations.CreateModel(
            name='tblStandards',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('standard', models.TextField()),
            ],
            options={
                'db_table': 'tblStandards',
            },
        ),
        migrations.CreateModel(
            name='tblThreatActions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ThreatAction', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tblThreatActions',
            },
        ),
        migrations.CreateModel(
            name='tblThreatIntelligence',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('ThreatDescription', models.CharField(max_length=255)),
                ('AttackVectors', models.CharField(max_length=255)),
                ('Motivations', models.TextField(max_length=255)),
                ('PotentialImpacts', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tblThreatIntelligence',
            },
        ),
        migrations.CreateModel(
            name='tblThreatSources',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ThreatSource', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tblThreatSources',
            },
        ),
        migrations.CreateModel(
            name='tblUnits',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('PlantUnits', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tblUnits',
            },
        ),
        migrations.CreateModel(
            name='tblWorkshopInformation',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('WorkshopStartDate', models.TextField()),
                ('WorkshopEndDate', models.TextField()),
                ('WorkshopName', models.TextField()),
                ('WorkshopObjectives', models.TextField()),
                ('WorkshopStatus', models.TextField()),
                ('OrganizationID', models.IntegerField()),
                ('WorkshopType', models.TextField()),
            ],
            options={
                'db_table': 'tblWorkshopInformation',
            },
        ),
        migrations.CreateModel(
            name='tblWorkshopNarrative',
            fields=[
                ('TopSection', models.CharField(max_length=255)),
                ('SubSection', models.TextField()),
                ('WorkshopQuestion', models.TextField()),
                ('ID', models.IntegerField(primary_key=True, serialize=False)),
                ('QuestionNumber', models.IntegerField()),
            ],
            options={
                'db_table': 'tblWorkshopNarrative',
            },
        ),
        migrations.CreateModel(
            name='tblZones',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('PlantZone', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tblZones',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FirstName', models.CharField(max_length=100)),
                ('LastName', models.CharField(max_length=100)),
                ('Title', models.CharField(max_length=100)),
                ('Organization', models.CharField(max_length=100)),
                ('Department', models.CharField(max_length=100)),
                ('Notes', models.CharField(max_length=500)),
                ('RiskID', models.IntegerField()),
            ],
            options={
                'db_table': 'OTRisk_AssessmentTeam',
            },
        ),
        migrations.CreateModel(
            name='ThreatAssessment',
            fields=[
                ('ThreatAssessmentID', models.IntegerField(primary_key=True, serialize=False)),
                ('post_id', models.IntegerField()),
                ('ThreatType', models.CharField(max_length=255)),
                ('ThreatImpactDescription', models.CharField(max_length=255)),
                ('ThreatImpactScore', models.IntegerField()),
                ('ThreatLikelihoodDescription', models.CharField(max_length=255)),
                ('ThreatLikelihoodScore', models.IntegerField()),
                ('IndustryAttackHistory', models.CharField(max_length=255)),
                ('HasAttackedYesNo', models.CharField(max_length=255)),
                ('HasBusinessImpactYesNo', models.CharField(max_length=255)),
                ('AttackExpectedYesNo', models.CharField(max_length=255)),
                ('KnownExposureYesNo', models.CharField(max_length=255)),
                ('Comments', models.CharField(max_length=255)),
                ('OverallThreatRatingHML', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tblThreatAssessment',
            },
        ),
        migrations.CreateModel(
            name='WalkdownAnswers',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('WalkdownID', models.IntegerField()),
                ('WalkdownQuestionID', models.IntegerField()),
                ('CyberPHA_ID', models.IntegerField()),
                ('UserResponse', models.TextField(max_length=3)),
                ('Details', models.CharField(max_length=255)),
                ('RANeeded', models.IntegerField()),
                ('questiontext', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'tblWalkdownAnswers',
            },
        ),
        migrations.CreateModel(
            name='tblFacility',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('FacilityName', models.CharField(max_length=25)),
                ('FacilityTypeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='OTRisk.facilitytype')),
            ],
            options={
                'db_table': 'tblFacility',
            },
        ),
        migrations.CreateModel(
            name='tblCyberPHAScenario',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('CyberPHA', models.IntegerField()),
                ('Scenario', models.CharField(max_length=255)),
                ('ThreatClass', models.CharField(max_length=100)),
                ('ThreatAgent', models.CharField(max_length=100)),
                ('ThreatAction', models.CharField(max_length=100)),
                ('Countermeasures', models.CharField(max_length=500)),
                ('RiskCategory', models.CharField(max_length=100)),
                ('Consequence', models.CharField(max_length=1000)),
                ('impactSafety', models.IntegerField()),
                ('impactDanger', models.IntegerField()),
                ('impactProduction', models.IntegerField()),
                ('impactFinance', models.IntegerField()),
                ('impactReputation', models.IntegerField()),
                ('impactEnvironment', models.IntegerField()),
                ('impactRegulation', models.IntegerField()),
                ('impactData', models.IntegerField()),
                ('impactSupply', models.IntegerField()),
                ('UEL', models.IntegerField()),
                ('RRU', models.IntegerField()),
                ('SM', models.IntegerField()),
                ('MEL', models.IntegerField()),
                ('RRM', models.IntegerField()),
                ('SA', models.IntegerField()),
                ('MELA', models.IntegerField()),
                ('RRa', models.TextField()),
                ('sl', models.IntegerField()),
                ('recommendations', models.CharField(max_length=1000)),
                ('Deleted', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
                ('aro', models.IntegerField()),
                ('sle', models.IntegerField()),
                ('ale', models.IntegerField()),
                ('countermeasureCosts', models.IntegerField()),
                ('control_recommendations', models.TextField()),
                ('justifySafety', models.TextField()),
                ('justifyLife', models.TextField()),
                ('justifyProduction', models.TextField()),
                ('justifyFinancial', models.TextField()),
                ('justifyReputation', models.TextField()),
                ('justifyEnvironment', models.TextField()),
                ('justifyRegulation', models.TextField()),
                ('justifyData', models.TextField()),
                ('justifySupply', models.TextField()),
                ('standards', models.TextField()),
                ('outage', models.TextField()),
                ('outageDuration', models.IntegerField()),
                ('outageCost', models.IntegerField()),
                ('probability', models.TextField()),
                ('userID', models.ForeignKey(db_column='userID', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tblCyberPHAScenario',
            },
        ),
        migrations.CreateModel(
            name='tblCyberPHAMitigationMeasure',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('CyberPHAEntry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='OTRisk.tblcyberphaentry')),
                ('MitigationMeasure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='OTRisk.tblmitigationmeasures')),
            ],
            options={
                'db_table': 'tblCyberPHAMitigationMeasure',
            },
        ),
        migrations.CreateModel(
            name='tblCyberPHAControlObjective',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('ControlObjective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='OTRisk.tblcontrolobjectives')),
                ('CyberPHAEntry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='OTRisk.tblcyberphaentry')),
            ],
            options={
                'db_table': 'tblCyberPHAControlObjective',
            },
        ),
        migrations.CreateModel(
            name='tblCyberPHA_key',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='OTRisk.tblcyberphaentry')),
            ],
            options={
                'db_table': 'tblCyberPHA_key',
            },
        ),
        migrations.CreateModel(
            name='RAWorksheetScenario',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('ScenarioDescription', models.CharField(max_length=255)),
                ('ThreatCode', models.CharField(max_length=3)),
                ('VulnCode', models.CharField(max_length=3)),
                ('ReputationCode', models.CharField(max_length=3)),
                ('FinancialCode', models.CharField(max_length=3)),
                ('OperationalCode', models.CharField(max_length=3)),
                ('SafetyCode', models.CharField(max_length=3)),
                ('RiskScore', models.IntegerField()),
                ('Comments', models.CharField(max_length=255)),
                ('ScenarioPriority', models.CharField(max_length=5)),
                ('ThreatScore', models.IntegerField()),
                ('VulnScore', models.IntegerField()),
                ('ReputationScore', models.IntegerField()),
                ('OperationScore', models.IntegerField()),
                ('FinancialScore', models.IntegerField()),
                ('SafetyScore', models.IntegerField()),
                ('DataScore', models.IntegerField()),
                ('SupplyChainScore', models.IntegerField()),
                ('ScenarioType', models.CharField(max_length=25)),
                ('RiskStatus', models.CharField(max_length=25)),
                ('threatSource', models.CharField(max_length=50)),
                ('threatTactic', models.CharField(max_length=50)),
                ('notes', models.TextField()),
                ('lifeScore', models.IntegerField()),
                ('productionScore', models.IntegerField()),
                ('environmentScore', models.IntegerField()),
                ('regulatoryScore', models.IntegerField()),
                ('riskSummary', models.TextField()),
                ('scenarioCost', models.IntegerField()),
                ('justifySafety', models.TextField()),
                ('justifyLife', models.TextField()),
                ('justifyProduction', models.TextField()),
                ('justifyFinancial', models.TextField()),
                ('justifyReputation', models.TextField()),
                ('justifyEnvironment', models.TextField()),
                ('justifyRegulation', models.TextField()),
                ('justifyData', models.TextField()),
                ('justifySupply', models.TextField()),
                ('event_cost_low', models.IntegerField()),
                ('event_cost_high', models.IntegerField()),
                ('event_cost_median', models.IntegerField()),
                ('outage', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No'), ('N/A', 'N/A')], default='N/A', max_length=3)),
                ('outageLength', models.IntegerField(default=0)),
                ('RAWorksheetID', models.ForeignKey(db_column='RAWorksheetID', on_delete=django.db.models.deletion.CASCADE, to='OTRisk.raworksheet')),
            ],
            options={
                'db_table': 'tblRAWorksheetScenario',
            },
        ),
        migrations.CreateModel(
            name='RAActions',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('phaID', models.IntegerField()),
                ('actionTitle', models.CharField(max_length=255)),
                ('actionOwner', models.CharField(max_length=255)),
                ('actionDate', models.CharField(max_length=255)),
                ('actionEffort', models.CharField(max_length=255)),
                ('actionDifficulty', models.CharField(max_length=1)),
                ('actionCost', models.CharField(max_length=1)),
                ('actionStatus', models.CharField(max_length=50)),
                ('actionDescription', models.CharField(max_length=255)),
                ('actionDueDate', models.DateField()),
                ('actionPriority', models.IntegerField()),
                ('actionAssets', models.TextField()),
                ('actionAffinity', models.TextField()),
                ('outageWWW', models.CharField(max_length=3)),
                ('outagePS', models.CharField(max_length=3)),
                ('outageIT', models.CharField(max_length=3)),
                ('outageEMS', models.CharField(max_length=3)),
                ('outageICS', models.CharField(max_length=3)),
                ('outageSIS', models.CharField(max_length=3)),
                ('history', models.TextField()),
                ('RAWorksheetID', models.ForeignKey(db_column='RAWorksheetID', on_delete=django.db.models.deletion.CASCADE, to='OTRisk.raworksheet')),
                ('organizationid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ra_actions', to='accounts.organization', verbose_name='Organization')),
                ('userid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ra_actions', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'db_table': 'tblRawActions',
            },
        ),
        migrations.CreateModel(
            name='QuestionThemes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('QuestionTheme', models.TextField()),
                ('fkQuestionnaireID', models.ForeignKey(db_column='fkQuestionnaireID', on_delete=django.db.models.deletion.CASCADE, to='OTRisk.questionnaire')),
            ],
            options={
                'db_table': 'tblQuestionThemes',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('ID', models.IntegerField(primary_key=True, serialize=False)),
                ('questiontext', models.TextField()),
                ('guidancenotes', models.TextField()),
                ('questionnumber', models.IntegerField()),
                ('QuestionnaireID', models.ForeignKey(db_column='QuestionnaireID', on_delete=django.db.models.deletion.CASCADE, to='OTRisk.questionnaire')),
                ('ThemeID', models.ForeignKey(db_column='ThemeID', on_delete=django.db.models.deletion.CASCADE, to='OTRisk.questionthemes')),
            ],
            options={
                'db_table': 'tblQuestions',
            },
        ),
        migrations.CreateModel(
            name='QuestionResponses',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('UserResponse', models.TextField()),
                ('UserNotes', models.TextField()),
                ('fkQuestionnaireInstance', models.IntegerField()),
                ('fkRiskAssessmentID', models.IntegerField()),
                ('QuestionID', models.ForeignKey(db_column='QuestionID', on_delete=django.db.models.deletion.CASCADE, to='OTRisk.questions')),
            ],
            options={
                'db_table': 'tblQuestionResponses',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_description', models.TextField(default='na', unique_for_date='startdate')),
                ('hazardous_events', models.TextField(default='na')),
                ('causes', models.TextField(default='na')),
                ('consequences', models.TextField(default='na')),
                ('trigger_event', models.TextField(default='na')),
                ('layers_of_protection', models.TextField(default='na')),
                ('risk_ranking', models.CharField(choices=[('H', 'High'), ('M', 'Medium'), ('L', 'Low')], default='', max_length=1)),
                ('risk_reduction_measures', models.TextField(default='na')),
                ('risk_residual_level', models.CharField(default='na', max_length=100)),
                ('acceptability_criteria', models.CharField(default='na', max_length=100)),
                ('threats', models.TextField(default='na')),
                ('vulnerabilities', models.TextField(default='na')),
                ('impact_analysis', models.CharField(choices=[('H', 'High'), ('M', 'Medium'), ('L', 'Low')], default='L', max_length=1)),
                ('likelihood_assessment', models.TextField(default='na')),
                ('risk_evaluation', models.TextField(default='na')),
                ('risk_mitigation', models.TextField(default='na')),
                ('riskauthor_id', models.IntegerField(default=1)),
                ('submit_status', models.CharField(choices=[('S', 'Started'), ('P', 'In Progress'), ('R', 'Under Review'), ('A', 'Action Items'), ('C', 'Completed')], default='S', max_length=1)),
                ('startdate', models.DateTimeField(default=django.utils.timezone.now)),
                ('enddate', models.DateTimeField(auto_now_add=True)),
                ('updateddate', models.DateTimeField(auto_now=True)),
                ('facility', models.TextField(default='na')),
                ('business_unit', models.TextField(default='na')),
                ('project_name', models.TextField(default='na')),
                ('scope', models.TextField(default='na')),
                ('objective', models.TextField(default='na')),
                ('assumptions', models.TextField(default='na')),
                ('SystemName', models.TextField(default='na')),
                ('SystemDescription', models.TextField(default='na')),
                ('SystemOwner', models.TextField(default='na')),
                ('SystemScope', models.TextField(default='na')),
            ],
            options={
                'ordering': ['-startdate'],
                'indexes': [models.Index(fields=['-startdate'], name='OTRisk_post_startda_87a366_idx')],
            },
        ),
        migrations.CreateModel(
            name='MitreICSTechniques',
            fields=[
                ('ID', models.IntegerField(primary_key=True, serialize=False)),
                ('SourceName', models.TextField()),
                ('TargetID', models.TextField()),
                ('TargetName', models.TextField()),
                ('Description', models.TextField()),
                ('SourceID', models.ForeignKey(db_column='SourceID', on_delete=django.db.models.deletion.CASCADE, related_name='mitigations', to='OTRisk.mitreicsmitigations')),
            ],
            options={
                'db_table': 'tblMitreTechniques',
            },
        ),
        migrations.CreateModel(
            name='CustomScenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.TextField()),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_scenarios', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_scenarios', to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='CustomConsequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Consequence', models.TextField()),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_consequences', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.organization')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_consequences', to='accounts.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FirstName', models.TextField()),
                ('LastName', models.TextField()),
                ('Title', models.TextField()),
                ('Organization', models.TextField()),
                ('Department', models.TextField()),
                ('Notes', models.TextField()),
                ('RiskID', models.ForeignKey(db_column='RiskID', on_delete=django.db.models.deletion.CASCADE, to='OTRisk.post')),
            ],
        ),
    ]
